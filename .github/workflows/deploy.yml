name: CI/CD Deployment to GKE

on:
    push:
        branches:
            - main

env:
    PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
    GKE_CLUSTER: "my-cluster"
    GKE_REGION: "europe-west1"
    DEPLOYMENT_NAME: "mlops-app"
    REPOSITORY: "europe-west1-docker.pkg.dev/manifest-wind-474003-j9/my-repo"
    IMAGE: "europe-west1-docker.pkg.dev/manifest-wind-474003-j9/my-repo/mlops-app"

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest

        container:
            image: google/cloud-sdk:latest

        steps:
            - name: Checkout_Repository
              uses: actions/checkout@v2

            - name: Authenticate with Google cloud
              uses: google-github-actions/auth@v1
              with:
                  credentials_json: ${{ secrets.GCP_SA_KEY }}

            # Install kubectl + GKE auth plugin via APT (component manager désactivé dans cette image)
            - name: Setup kubectl & GKE auth plugin (APT)
              run: |
                  apt-get update
                  DEBIAN_FRONTEND=noninteractive apt-get install -y \
                    kubectl \
                    google-cloud-cli-gke-gcloud-auth-plugin
                  apt-get clean

            - name: Configure GCloud
              run: |
                  gcloud config set project $PROJECT_ID
                  gcloud auth configure-docker europe-west1-docker.pkg.dev --quiet

            # Build & Push : si docker existe, on l'utilise; sinon fallback Cloud Build
            - name: Building and Pushing Image
              run: |
                  if command -v docker >/dev/null 2>&1; then
                    echo "Docker trouvé: build/push local"
                    docker build -t $IMAGE:$GITHUB_SHA .
                    docker push $IMAGE:$GITHUB_SHA
                  else
                    echo "Docker absent: build/push avec Cloud Build"
                    gcloud builds submit --tag $IMAGE:$GITHUB_SHA --project $PROJECT_ID
                  fi

            - name: GKE Configuration
              run: |
                  gcloud container clusters get-credentials $GKE_CLUSTER --region $GKE_REGION --project $PROJECT_ID

            - name: Deploy to Kubernetes
              run: |
                  kubectl apply -f kubernetes-deployment.yml
                  # Assure-toi que le nom du conteneur dans ton Deployment est bien "mlops-app"
                  kubectl set image deployment/$DEPLOYMENT_NAME $DEPLOYMENT_NAME=$IMAGE:$GITHUB_SHA
